diff --git a/src/snapshot/embedded/platform-embedded-file-writer-zos.cc b/src/snapshot/embedded/platform-embedded-file-writer-zos.cc
index eaa367bb8ce..9144a2696a2 100644
--- a/src/snapshot/embedded/platform-embedded-file-writer-zos.cc
+++ b/src/snapshot/embedded/platform-embedded-file-writer-zos.cc
@@ -17,6 +17,9 @@ static constexpr int kAsmMaxLineLen = 71;
 static constexpr int kAsmContIndentLen = 15;
 static constexpr int kAsmContMaxLen = kAsmMaxLineLen - kAsmContIndentLen;
 
+// https://www.ibm.com/docs/sl/zos/2.1.0?topic=extensions-symbol-length
+static constexpr int __kAsmSymbolMaxLen = 63;
+
 namespace {
 int hlasmPrintLine(FILE* fp, const char* fmt, ...) {
   int ret;
@@ -117,7 +120,15 @@ void PlatformEmbeddedFileWriterZOS::DeclareFunctionBegin(const char* name,
   hlasmPrintLine(fp_, "*--------------------------------------------\n");
   hlasmPrintLine(fp_, "* Builtin %s\n", name);
   hlasmPrintLine(fp_, "*--------------------------------------------\n");
-  hlasmPrintLine(fp_, "%s DS 0H\n", name);
+  int len = strlen(name);
+  if (len > __kAsmSymbolMaxLen) {
+    char newname[__kAsmSymbolMaxLen + 1];
+    newname[sizeof(newname) - 1] = 0;
+    strcpy(newname, "_bi_");
+    // + 5: for _bi_ and terminator '\0'
+    memcpy(newname + 4, name + len - sizeof(newname) + 5, sizeof(newname) - 5);
+    hlasmPrintLine(fp_, "%s DS 0H\n", newname);
+  }
 }
 
 void PlatformEmbeddedFileWriterZOS::DeclareFunctionEnd(const char* name) {
diff --git a/tools/testrunner/local/utils.py b/tools/testrunner/local/utils.py
index 470ee1ae28b..cbc901e068e 100644
--- a/tools/testrunner/local/utils.py
+++ b/tools/testrunner/local/utils.py
@@ -99,8 +99,7 @@ def GuessOS():
 def IsS390SimdSupported():
   if GuessOS() == 'zos':
     from ctypes import CDLL
-    libname = os.environ.get('ZOSLIB_LIBPATH') + '/libzoslib.so'
-    clib = CDLL(libname)
+    clib = CDLL('libzoslib.so')
     return clib.__is_vef1_available()
 
   import subprocess
