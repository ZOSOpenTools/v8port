# This package does not use a git clone URL.  Instead it uses
# the depot tools package to peform a fetch.  Fetch is part
# of the depot tools package toolchain.  So, in this case
# ZOPEN_BUILD_LINE and ZOPEN_DEV_URL are unspecified and 
# ZOPEN_TYPE is set to BARE.  Also, in this case, do 
# not use ZOPEN_DEV_DEPS.  Instead use ZOPEN_DEPS.
# Use zopen build -vv to see if the dependencies are being processed
export ZOPEN_TYPE="BARE"
export ZOPEN_DEPS="depot_tools zoslib cmake make python gn ninja git comp_clang"

export ZOPEN_RUNTIME_DEPS="zoslib python"
export ZOPEN_BOOTSTRAP="python3"
# Nothing to configure or build:
export ZOPEN_CONFIGURE="skip"
export ZOPEN_MAKE="skip"
export ZOPEN_INSTALL="zopen_install"
export ZOPEN_CATEGORIES="development language core"

# Set the python dir after buildenv deps are checked
zopen_pre_patch() {
  export ZOPEN_PYTHONDIR=`type python3 | head -1 | sed "s:^.*[ (]/:/:;s:)$::"`
  export ZOPEN_BOOTSTRAP_OPTS="bootstrap/bootstrap.py --bootstrap-name ${ZOPEN_PYTHONDIR}"
}


zopen_check_results()
{
  dir="$1"
  pfx="$2"
  chk="$1/$2_check.log"

  # Echo the following information to gauge build health
  echo "actualFailures:0"
  echo "totalTests:1"
  echo "expectedFailures:0"
  echo "expectedTotalTests:1"
}

zopen_get_version()
{
  # Modify to echo the version of your tool/library
  # Rather than hardcoding the version, obtain the version by running the tool/library
  echo "1.0.0"
}

# This is called first?
zopen_init()
{
  # Check for python
  if ! type python3 >/dev/null ; then
    printError "need python3 venv with packages: httplib2 and six"
  fi


  #python3 -m venv curl_python
  #. ./curl_python/bin/activate
  #pip3 install impacket


  # Ensure path is correct
  desired_path="zopen/usr/local/zopen/depot_tools/depot_tools-main"

  if  expr "${PATH}" : ".*${desired_path}.*" 1>/dev/null ; then
    echo "Good. depot_tools is in path."
  else
    echo "Path to depot_tools missing.  Adding it to path.."
    export PATH=${PATH}:${HOME}/${desired_path}
  fi

  # depot_tools creates the venv, here we ensure the necessary packages are installed
  # Activate the path
  echo "activating the virtual env - venv"
  . ${ZOPEN_PKGINSTALL}/depot_tools/depot_tools-main//venv/bin/activate

  # Update the virtual env
  echo "updating the virtual env pip"
  python -m pip install -U pip

  # Install the necessary requirements
  pip install -r ${ZOPEN_PKGINSTALL}/depot_tools/depot_tools-main/requirements.txt

  # Using depot_tools disable metrics.
  # Comment out this line if you wish to participate.
  gclient metrics --opt-out


}

